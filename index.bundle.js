"use strict";(self.webpackChunkitalian=self.webpackChunkitalian||[]).push([[826],{426:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),a=t.n(o),r=t(645),c=t.n(r)()(a());c.push([e.id,"body {\n    background-color: rgb(14, 14, 14);\n}\n\n\n.hello {\n    color: rgb(243, 243, 228);\n}\n\n.tab {\n    overflow: hidden;\n    border: 1px solid rgb(215, 215, 198);\n    background-color: rgb(243, 243, 228);\n  }\n  \n  /* Style the buttons that are used to open the tab content */\n  .tab button {\n    background-color: inherit;\n    float: left;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 14px 16px;\n    transition: 0.3s;\n  }\n  \n  /* Change background color of buttons on hover */\n  .tab button:hover {\n    background-color: rgb(226, 226, 176);\n  }\n  \n  /* Create an active/current tablink class */\n  .tab button.active {\n    background-color: rgb(109, 131, 222);\n  }\n\n  .content {\n    animation: fadeEffect 1s; /* Fading effect takes 1 second */\n  }\n  \n  /* Go from zero to full opacity */\n  @keyframes fadeEffect {\n    from {opacity: 0;}\n    to {opacity: 1;}\n  }\n\n  .hero {\n   \n    display: flex;\n    justify-content: center;\n    gap: 3vw;\n    margin: 5vw;\n  }\n\n  .text {\n    font-family: Arial, Helvetica, sans-serif;\n    color: rgb(243, 243, 228);\n    margin: 30px;\n  }\n\n  .contact {\n    display: flex;\n    color: antiquewhite;\n  }","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,iCAAiC;AACrC;;;AAGA;IACI,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB;IAChB,oCAAoC;IACpC,oCAAoC;EACtC;;EAEA,4DAA4D;EAC5D;IACE,yBAAyB;IACzB,WAAW;IACX,YAAY;IACZ,aAAa;IACb,eAAe;IACf,kBAAkB;IAClB,gBAAgB;EAClB;;EAEA,gDAAgD;EAChD;IACE,oCAAoC;EACtC;;EAEA,2CAA2C;EAC3C;IACE,oCAAoC;EACtC;;EAEA;IACE,wBAAwB,EAAE,iCAAiC;EAC7D;;EAEA,iCAAiC;EACjC;IACE,MAAM,UAAU,CAAC;IACjB,IAAI,UAAU,CAAC;EACjB;;EAEA;;IAEE,aAAa;IACb,uBAAuB;IACvB,QAAQ;IACR,WAAW;EACb;;EAEA;IACE,yCAAyC;IACzC,yBAAyB;IACzB,YAAY;EACd;;EAEA;IACE,aAAa;IACb,mBAAmB;EACrB",sourcesContent:["body {\n    background-color: rgb(14, 14, 14);\n}\n\n\n.hello {\n    color: rgb(243, 243, 228);\n}\n\n.tab {\n    overflow: hidden;\n    border: 1px solid rgb(215, 215, 198);\n    background-color: rgb(243, 243, 228);\n  }\n  \n  /* Style the buttons that are used to open the tab content */\n  .tab button {\n    background-color: inherit;\n    float: left;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 14px 16px;\n    transition: 0.3s;\n  }\n  \n  /* Change background color of buttons on hover */\n  .tab button:hover {\n    background-color: rgb(226, 226, 176);\n  }\n  \n  /* Create an active/current tablink class */\n  .tab button.active {\n    background-color: rgb(109, 131, 222);\n  }\n\n  .content {\n    animation: fadeEffect 1s; /* Fading effect takes 1 second */\n  }\n  \n  /* Go from zero to full opacity */\n  @keyframes fadeEffect {\n    from {opacity: 0;}\n    to {opacity: 1;}\n  }\n\n  .hero {\n   \n    display: flex;\n    justify-content: center;\n    gap: 3vw;\n    margin: 5vw;\n  }\n\n  .text {\n    font-family: Arial, Helvetica, sans-serif;\n    color: rgb(243, 243, 228);\n    margin: 30px;\n  }\n\n  .contact {\n    display: flex;\n    color: antiquewhite;\n  }"],sourceRoot:""}]);const s=c},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(c[i]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&c[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),c=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(c).concat([r]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},c=[],s=0;s<e.length;s++){var i=e[s],d=o.base?i[0]+o.base:i[0],l=r[d]||0,u="".concat(d," ").concat(l);r[d]=l+1;var p=t(u),A={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var f=a(A,o);o.byIndex=s,n.splice(s,0,{identifier:u,updater:f,references:1})}c.push(u)}return c}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var r=o(e=e||[],a=a||{});return function(e){e=e||[];for(var c=0;c<r.length;c++){var s=t(r[c]);n[s].references--}for(var i=o(e,a),d=0;d<r.length;d++){var l=t(r[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}r=i}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},500:(e,n,t)=>{var o=t(379),a=t.n(o),r=t(795),c=t.n(r),s=t(569),i=t.n(s),d=t(565),l=t.n(d),u=t(216),p=t.n(u),A=t(589),f=t.n(A),m=t(426),C={};C.styleTagTransform=f(),C.setAttributes=l(),C.insert=i().bind(null,"head"),C.domAPI=c(),C.insertStyleElement=p(),a()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;const h=t.p+"9b542c5ed8b43d870113.jpeg",b=t.p+"b60af79451efbb488b82.jpeg",g=t.p+"ef34026059ccffd9ea1e.jpeg";function v(){const e=document.createElement("div");e.classList.add("content");const n=document.createElement("h1");let t=document.createTextNode("Italian Resto");n.appendChild(t),n.classList.add("hello"),e.appendChild(n);const o=document.createElement("div");o.classList.add("hero");const a=new Image;a.src=h,a.style.width="25vw";const r=new Image;r.src=b,r.style.width="25vw";const c=new Image;c.src=g,c.style.width="25vw",o.appendChild(a),o.appendChild(r),o.appendChild(c),e.appendChild(o);const s=document.createElement("p");s.classList.add("text");let i=document.createTextNode("Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of de Finibus Bonorum");s.appendChild(i),e.appendChild(s),document.body.appendChild(e)}const E=t.p+"b108a61e0599bdee53e4.png";function y(){const e=document.createElement("div");e.classList.add("content");const n=document.createElement("h1");let t=document.createTextNode("MENU");n.appendChild(t),n.classList.add("hello"),e.appendChild(n);const o=new Image;o.src=E,o.style.width="80vw",o.style.margin="10vw",e.appendChild(o),document.body.appendChild(e)}const I=t.p+"93fe8560a256c417e328.jpeg";function w(){const e=document.createElement("div");e.classList.add("content");const n=document.createElement("h1");let t=document.createTextNode("Contact Us");n.appendChild(t),n.classList.add("hello"),e.appendChild(n);const o=document.createElement("div"),a=document.createElement("div"),r=new Image,c=document.createElement("h2"),s=document.createElement("p");r.src=I,r.style.width="40vw";const i=document.createTextNode("Chef Fabiotzzi"),d=document.createTextNode("It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to usin");c.appendChild(i),s.appendChild(d),a.append(c,s),o.append(r,a),o.classList.add("contact"),e.appendChild(o),document.body.appendChild(e)}let k=document.createElement("div");k.classList.add("tab");let x=document.createElement("button");x.classList.add("home"),x.innerHTML="HOME",x.addEventListener("click",(function(){let e,n=document.getElementsByClassName("content");if(null==n)v();else{for(e=n.length-1;e>=0;--e)n[e].remove();v()}}));let B=document.createElement("button");B.classList.add("menu"),B.innerHTML="MENU",B.addEventListener("click",(function(){let e,n=document.getElementsByClassName("content");if(null==n)y();else{for(e=n.length-1;e>=0;--e)n[e].remove();y()}}));let L=document.createElement("button");L.classList.add("contacts"),L.innerHTML="CONTACT",L.addEventListener("click",(function(){let e,n=document.getElementsByClassName("content");if(null==n)w();else{for(e=n.length-1;e>=0;--e)n[e].remove();w()}})),k.append(x,B,L),console.log(k),document.body.appendChild(k),v()}},e=>{e(e.s=500)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,